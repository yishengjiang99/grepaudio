{"version":3,"file":"index.js","sources":["../src/waves.js","../src/piano.js","../src/startContext.js"],"sourcesContent":["export const Piano = `{\"real\":[0,0,-0.203569,0.5,-0.401676,0.137128,-0.104117,0.115965,-0.004413,0.067884,-0.00888,0.0793,-0.038756,0.011882,-0.030883,0.027608,-0.013429,0.00393,-0.014029,0.00972,-0.007653,0.007866,-0.032029,0.046127,-0.024155,0.023095,-0.005522,0.004511,-0.003593,0.011248,-0.004919,0.008505,-0.00292,0.00152,-0.005641,0.002615,-0.001866,0.001316,-0.00032,0.0008,-0.000957,0.001989,-0.001172,0.001682,-0.00262,0.000544,-0.000734,0.000186,-0.000363,0.000243,-0.000142,0.000437,-0.00086,0.000117,-0.00035,0.00011,-0.000253,0.000218,-0.000061,0.000015,-0.000038,0.000017,-0.000025,0.000007,-0.000081,0.000017,-0.000064,0.000166,-0.000009,0.000013,-0.000024,0.000001,-0.000032,0.000013,-0.000018,0.000007,-0.000013,0.00001,-0.000023,0.000008,-0.000025,0.000046,-0.000035,0.000006,-0.000012,0.000012,-0.000024,0.000023,-0.000024,0.000027,-0.00001,0.000022,-0.000011,0.000021,-0.000007,0.000011,-0.000006,0.000021,-0.000014,0.000026,-0.000013,0.000003,-0.000032,0.000033,-0.000036,0.000025,-0.00002,0.000026,-0.00005,0.000028,-0.000013,0.000008,-0.000018,0.00002,-0.000086,0.00012,-0.000005,0.000012,-0.000016,0.000028,-0.000012,0.000006,-0.000015,0.000012,-0.000022,0.000012,-0.000023,0.000024,-0.000011,0.000022,-0.000009,0.000018,-0.000019,0.000013,-0.000042,0.000015,-0.000019,0.000014,-0.000019,0.000007,-0.000008,0.00003,-0.000011,0.000011,-0.000012,0.000022,-0.000007,0.000018,-0.000028,0.000025,-0.00002,0.000008,-0.000032,0.000022,-0.00001,0.000013,-0.000026,0.000013,-0.000024,0.000009,-0.000107,0.000109,-0.000007,0.000014,-0.000015,0.000007,-0.000029,0.000045,-0.000023,0.000039,-0.00001,0.000029,-0.000008,0.000036,-0.000018,0.000007,-0.000007,0.000007,-0.000025,0.00001,-0.000006,0.000022,-0.000021,0.000007,-0.000018,0.000011,-0.000011,0.00001,-0.000015,0.00002,-0.000012,0.000004,-0.000005,0.000007,-0.000007,0.000003,-0.000001,0.000006,-0.000007,0.000018,-0.000002,0.000005,-0.000008,0.000006,-0.00001,0.000016,-0.00001,0.000021,-0.000011,0.000013,-0.000011,0.000005,-0.000006,0.000016,-0.000014,0.000014,-0.000009,0.000009,-0.000004,0.000013,-0.000015,0.000004,-0.000007,0.000007,-0.000004,0.000004,-0.000009,0.00001,-0.000008,0.000013,-0.000012,0.000001,-0.000003,0.000012,-0.000004,0.000004,-0.000007,0.000008,-0.00001,0.000013,-0.000015,0.000013,-0.00001,0.000012,-0.000008,0.000011,-0.000024,0.000008,-0.000013,0.000013,-0.000018,0.000005,-0.000022,0.000037,-0.000019,0.000027,-0.000022,0.000026,-0.000029,0.000029,-0.000029,0.000031,-0.000034,0.000032,-0.000031,0.000037,-0.000033,0.000038,-0.000038,0.000039,-0.000036,0.000035,-0.000038,0.000035,-0.000034,0.000033,-0.00003,0.000029,-0.000028,0.000025,-0.000023,0.000022,-0.00002,0.000018,-0.000017,0.000015,-0.000014,0.000013,-0.000012,0.000011,-0.000011,0.00001,-0.000009,0.000009,-0.000009,0.000008,-0.000008,0.000008,-0.000008,0.000007,-0.000007,0.000007,-0.000007,0.000006,-0.000006,0.000006,-0.000006,0.000006,-0.000005,0.000006,-0.000006,0.000005,-0.000005,0.000005,-0.000005,0.000005,-0.000005,0.000005,-0.000005,0.000004,-0.000004,0.000004,-0.000005,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000003,0.000004,-0.000004,0.000003,-0.000003,0.000003,-0.000004,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000002,0.000003,-0.000003,0.000003,-0.000002,0.000003,-0.000003,0.000002,-0.000002,0.000002,-0.000003,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000001,0.000002,-0.000002,0.000002,-0.000001,0.000002,-0.000002,0.000002,-0.000001,0.000002,-0.000002,0.000001,-0.000001,0.000002,-0.000002,0.000001,-0.000001,0.000001,-0.000002,0.000001,-0.000001,0.000001,-0.000002,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0,0,0.000001,-0.000001,0,0,0,-0.000001,0,0,0,-0.000001,0,0,0,-0.000001,0,0,0,-0.000001,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"imag\":[0,0.147621,-0.000001,0.000007,-0.00001,0.000005,-0.000006,0.000009,0,0.000008,-0.000001,0.000014,-0.000008,0.000003,-0.000009,0.000009,-0.000005,0.000002,-0.000007,0.000005,-0.000005,0.000005,-0.000023,0.000037,-0.000021,0.000022,-0.000006,0.000005,-0.000004,0.000014,-0.000007,0.000012,-0.000004,0.000002,-0.00001,0.000005,-0.000004,0.000003,-0.000001,0.000002,-0.000002,0.000005,-0.000003,0.000005,-0.000008,0.000002,-0.000002,0.000001,-0.000001,0.000001,-0.000001,0.000002,-0.000003,0,-0.000002,0,-0.000001,0.000001,0,0,0,0,0,0,0,0,0,0.000001,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.000001,-0.000001,0,0,0,-0.000001,0,0,0,0,0,-0.000002,0.000002,0,0,0,0.000001,0,0,0,0,0,0,-0.000001,0.000001,0,0.000001,0,0,-0.000001,0,-0.000001,0,-0.000001,0,-0.000001,0,0,0.000001,0,0,0,0.000001,0,0.000001,-0.000001,0.000001,-0.000001,0,-0.000001,0.000001,0,0,-0.000001,0,-0.000001,0,-0.000004,0.000004,0,0.000001,-0.000001,0,-0.000001,0.000002,-0.000001,0.000002,0,0.000001,0,0.000002,-0.000001,0,0,0,-0.000001,0,0,0.000001,-0.000001,0,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0,0,0,0,0,0,0,0,0.000001,0,0,0,0,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0,0,0.000001,-0.000001,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0,-0.000001,0,0,0,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0,0,0.000001,0,0,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000002,0.000001,-0.000001,0.000001,-0.000002,0,-0.000002,0.000004,-0.000002,0.000003,-0.000002,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000004,0.000004,-0.000003,0.000003,-0.000003,0.000003,-0.000003,0.000003,-0.000002,0.000002,-0.000002,0.000002,-0.000002,0.000002,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0.000001,0,0.000001,-0.000001,0,0,0.000001,-0.000001,0,0,0,-0.000001,0,0,0,-0.000001,0,0,0,-0.000001,0,0,0,-0.000001,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}`","/* eslint-disable no-debugger */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport Envelope from \"//dsp.grepawk.com/lib/envelope.js\";\nimport { Piano } from \"./waves.js\";\nconst keys = [\"a\", \"w\", \"s\", \"e\", \"d\", \"f\", \"t\", \"g\", \"y\", \"h\", \"u\", \"j\"];\n\nconst regularNotes = \"261.63, 293.66 , 329.63, 349.23, 392.00, 440.00, 493.88\".split(\n  \", \"\n);\nconst regularKeys = \"a, s, d, f, g, h, j\";\nconst blackKeys = [\"w, e, t, y, u\"];\nconst notes = [\n  261.63,\n  277.18,\n  293.66,\n  311.13,\n  329.63,\n  349.23,\n  369.99,\n  392,\n  415.3,\n  440,\n  466.16,\n  493.88,\n];\nconst isblack = (key) => [\"w\", \"e\", \"t\", \"y\", \"u\"].indexOf(key) >= 0;\n\nconst freqmultiplierindex = [0, 0.25, 0.5, 1, 2, 4];\nconst css = `:host{box-sizing:border-box;padding:5px;max-width:100vw} \nul{height:18.875em;width:80em;margin:5em auto;padding:2em 0 0 2em;position:relative;border:1px solid #160801;border-radius:1em;background:black} \nli{margin:0;padding:0;list-style:none;position:relative;float:left} ul .white{height:16em;width:3.8em;z-index:1;border-left:1px solid #bbb;border-bottom:1px solid #bbb;border-radius:0 0 5px 5px;box-shadow:-1px 0 0 rgba(255,255,255,.8) inset,0 0 5px #ccc inset,0 0 3px rgba(0,0,0,.2);background:linear-gradient(to bottom,#eee 0,#fff 100%);margin:0 0 0 -1em}\nul .white:active{border-top:1px solid #777;border-left:1px solid #999;border-bottom:1px solid #999;box-shadow:2px 0 3px rgba(0,0,0,.1) inset,-5px 5px 20px rgba(0,0,0,.2) inset,0 0 3px rgba(0,0,0,.2);background:linear-gradient(to bottom,#fff 0,#e9e9e9 100%)}\nul .white.pressed{border-top:1px solid #777;border-left:1px solid #999;border-bottom:1px solid #999;box-shadow:2px 0 3px rgba(0,0,0,.1) inset,-5px 5px 20px rgba(0,0,0,.2) inset,0 0 3px rgba(0,0,0,.2);background:linear-gradient(to bottom,#fff 0,#e9e9e9 100%)}\n.black{height:8em;width:2em;margin:0 0 0 -1em;z-index:2;border:1px solid #000;border-radius:0 0 3px 3px;box-shadow:-1px -1px 2px rgba(255,255,255,.2) inset,0 -5px 2px 3px rgba(0,0,0,.6) inset,0 2px 4px rgba(0,0,0,.5);background:linear-gradient(45deg,#222 0,#555 100%)}\n.black:active{box-shadow:-1px -1px 2px rgba(255,255,255,.2) inset,0 -2px 2px 3px rgba(0,0,0,.6) inset,0 1px 2px rgba(0,0,0,.5);background:linear-gradient(to right,#444 0,#222 100%)}.a,.c,.d,.f,.g{margin:0 0 0 -1em}ul li:first-child{border-radius:5px 0 5px 5px}ul li:last-child{border-radius:0 5px 5px 5px}\n.black.pressed{box-shadow:-1px -1px 2px rgba(255,255,255,.2) inset,0 -2px 2px 3px rgba(0,0,0,.6) inset,0 1px 2px rgba(0,0,0,.5);background:linear-gradient(to right,#444 0,#222 100%)}.a,.c,.d,.f,.g{margin:0 0 0 -1em}ul li:first-child{border-radius:5px 0 5px 5px}ul li:last-child{border-radius:0 5px 5px 5px}`;\n\nconst waveShaper = JSON.parse(Piano);\n\nexport class PianoKeyboard extends HTMLElement {\n  constructor() {\n    super();\n    this.params = {\n      min: 0,\n      max: 4,\n      attack: 0.01,\n      decay: 0.05,\n      sustain: 0.1,\n      release: 0.01, //0.01\n      octave: 2,\n    };\n    this.waveshaper = waveShaper;\n    this.keyDomelements = {};\n    this.adsrs = {};\n    this.initialized = false;\n    function _key(note, key) {\n      return `<li\n      id='${note}' \n      data-note='${note}' \n      class=\"${isblack(key) ? \"black\" : \"white\"}\"> ${key}</li>`;\n    }\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.innerHTML = `<style>${css}</style>`;\n    const list = document.createElement(\"ul\");\n    [2, 3, 4].forEach((octave) => {\n      keys.forEach((key, index) => {\n        list.innerHTML += _key(notes[index] * freqmultiplierindex[octave], key);\n      });\n    });\n    this.shadowRoot.appendChild(list); // += \"</ul>\";\n  }\n\n  connectedCallback() {\n    var self = this;\n    this.shadowRoot.querySelectorAll(\"li\").forEach((el) => {\n      el.addEventListener(\"mousedown\", (e) => {\n        if (!e.target.dataset.note) return false;\n        const note = parseFloat(e.target.dataset.note);\n        if (!self.adsrs[note]) {\n          self.adsrs[note] = self._getNote(note);\n        }\n        self.adsrs[note].trigger(self.ctx.currentTime);\n      });\n\n      el.addEventListener(\"mouseup\", (e) => {\n        const note = parseFloat(e.target.dataset.note);\n        self.adsrs[note] && self.adsrs[note].release(self.ctx.currentTime);\n      });\n    });\n\n    window.onkeydown = function (e) {\n      const index = keys.indexOf(e.key);\n      if (index < 0) return;\n      const note = notes[index];\n      self.shadowRoot.getElementById(note).classList.toggle(\"pressed\");\n      if (!self.adsrs[note]) {\n        self.adsrs[note] = self._getNote(note);\n      }\n      self.adsrs[note].trigger(self.ctx.currentTime);\n    };\n    window.onkeyup = function (e) {\n      const index = keys.indexOf(e.key);\n      if (index > -1) {\n        const note = notes[index];\n        self.shadowRoot.getElementById(note).classList.toggle(\"pressed\");\n\n        self.adsrs[note] && self.adsrs[note].release(self.ctx.currentTime);\n      }\n    };\n  }\n\n  attributeChangedCallback(name, oldval, newval) {\n    super.attributeChangedCallback(name, oldval, newval);\n  }\n\n  render() {\n    return `<ul>\n      ${keys.map(\n        (value, index) =>\n          `<li data-note='${notes[index]}' class=\"${\n            isblack(value) ? \"black\" : \"white\"\n          }\"></li>`\n      )}\n      </ul>`;\n  }\n\n  _getNote(note) {\n    this.ctx = this.ctx || window.g_audioCtx || new AudioContext();\n    let ctx = this.ctx;\n    this.masterGain = this.masterGain || new GainNode(this.ctx);\n    this.masterGain.connect(ctx.destination);\n    const { min, max, attack, decay, sustain, release } = this.params;\n    var freq_multiplier = freqmultiplierindex[this.params.octave];\n\n    var offfreq_attenuator = new GainNode(ctx, { gain: 1 });\n    var osc1 = ctx.createOscillator();\n\n    osc1.frequency.value = note * freq_multiplier;\n    osc1.type = \"square\";\n\n    var osc2 = ctx.createOscillator();\n    osc2.frequency.value = note * freq_multiplier * 2;\n    osc2.type = \"sine\";\n\n    var gain = new GainNode(ctx, { gain: 1 });\n\n    if (this.waveShaper) {\n      osc1.setPeriodicWave(this.waveShaper);\n      osc2.setPeriodicWave(this.waveshaper);\n    }\n    osc1.connect(gain);\n    osc2.connect(offfreq_attenuator).connect(gain);\n    var gainEnvelope = new Envelope(\n      min,\n      max,\n      attack,\n      decay,\n      sustain,\n      release,\n      gain.gain\n    );\n    osc1.start(0);\n    osc2.start(0);\n\n    gain.connect(this.masterGain);\n    gain.connect(this.masterGain);\n    // gainEnvelope.trigger(ctx.currentTime);\n    return gainEnvelope;\n  }\n\n  _onTouchEnd(e) {\n    const note = parseFloat(e.target.dataset.note);\n    // if( this.asdrs[note]){\n    //   this.asdrs[note] = this._getNote(note);\n    // }\n    taht.asdrs[note] && taht.asdrs[note].release();\n  }\n}\n\nwindow.customElements.define(\"piano-keyboard\", PianoKeyboard);\n","// import Tone from \"../test/Tone\";\n\nlet template = document.createElement(\"template\");\ntemplate.innerHTML = `\n\t<style></style>\n\t<button>Start</button>\n`;\nexport class StartContext extends HTMLElement {\n  static get observedAttributes() {\n    return [\"disabled\"];\n  }\n  constructor() {\n    super();\n    let shadowRoot = this.attachShadow({ mode: \"open\" });\n    shadowRoot.appendChild(template.content.cloneNode(true));\n    var that = this;\n    this.shadowRoot.querySelector(\"button\").onclick = async function () {\n      if (window.Tone) await window.Tone.start();\n\n      this.disabled = true;\n      that.dispatchEvent(\n        new CustomEvent(\"audioStarted\") //, { tone: Tone, ctx: window.g_audioctx })\n      );\n    };\n  }\n  connectedCallBack() {}\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name == \"disabled\") {\n      this.shadowRoot\n        .querySelector(\"button\")\n        .setAttribute(\"disabled\", newValue);\n    }\n  }\n}\n\nwindow && window.customElements.define(\"start-context\", StartContext);\n"],"names":[],"mappings":"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"}